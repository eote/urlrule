#!/usr/bin/perl -w
###APPNAME:     urlrule_new
###APPAUTHOR:   xiaoranzzz
###APPDATE:	Sat Mar 22 22:56:33 2008
###APPVER:	0.1
###APPDESC:     create new url rule	
###APPUSAGE:	URL [0-5]
###APPEXAMPLE:	urlrule_new http://www.shuku.net/novels/gulong/bianlang/bianlang.html 2
###APPOPTION:	
use strict;
use lib $ENV{XR_PERL_MODULE_DIR};
use MyPlace::Script::Usage qw/help_even_empty/;

exit 0 if(help_even_empty($0,@ARGV));

use MyPlace::ColorPrint;
use MyPlace::URLRule qw/parse_rule/;

my %rule = %{parse_rule(@ARGV)};
my $url=$rule{url};
my $level=$rule{level};
my $source=$rule{source};


if(-f $source) {
    app_message("Rule for $url exists,opened for editing instead\n");
    system("r-vim \"$source\"");
    exit 0;
}

my $date=localtime();
open VIMED,"|-","r-vim -c 'file $source' - ";
print VIMED <<"HEAD";
#!/usr/bin/perl -w
#$url
#$date
use strict;
no warnings 'redefine';

HEAD

print VIMED <<'FUNC';

=method1
sub apply_rule {
 return (
       '#use quick parse'=>1,
       'data_exp'=>undef,
       'data_map'=>undef,
       'pass_exp'=>undef,
       'pass_map'=>undef,
       'pass_name_map'=>undef,
       'pages_exp'=>undef,
       'pages_map'=>undef,
       'pages_pre'=>undef,
       'pages_suf'=>undef,
       'pages_start'=>undef,
       'title_exp'=>undef,
       'title_map'=>undef,
       'charset'=>undef
 );
}
=cut

=method2
use MyPlace::URLRule::Utils qw/get_url/;

sub apply_rule {
    my ($url,$rule) = @_;
	my $html = get_url($url,'-v');
    my $title = undef;
    my @data;
    my @pass_data;
    #my @html = split(/\n/,$html);
    return (
        count=>scalar(@data),
        data=>\@data,
        pass_count=>scalar(@pass_data),
        pass_data=>\@pass_data,
        base=>$url,
        title=>$title,
    );
}

=cut

1;
FUNC
print VIMED <<'USAGE';

__END__

#       vim:filetype=perl
USAGE


close VIMED;

#if(-f "$source" and ! -x "$source") {
#    chmod 0775,$source; 
#}
exit 0;

